<?php


namespace ivoglent\yii2\apm\listeners;


use Elastic\Apm\PhpAgent\Exception\RuntimeException;
use GuzzleHttp\Exception\GuzzleException;
use ivoglent\yii2\apm\Listener;
use Yii;
use yii\base\ActionEvent;
use yii\base\Event;
use yii\console\Application;

class WorkerListener extends Listener
{
    public function start()
    {
        parent::start(); // TODO: Change the autogenerated stub
        Event::on(Application::class, WorkerInterface::EVENT_BEFORE_EXECUTE, [$this, 'beforeExecute']);
        Event::on(Application::class, WorkerInterface::EVENT_AFTER_EXECUTE, [$this, 'afterExecute']);
    }

    /**
     * @param Event $event
     */
    public function beforeExecute(Event $event) {
        if ($this->agent->isReady()) {
            $sender = $event->sender;
            Yii::info('Worker executing...');
            if ($sender instanceof WorkerInterface) {
                $txtName = $sender->getName();
                Yii::info('Worker start: ' . $txtName, 'apm');
                $this->agent->startTransaction($txtName, 'worker');
            }
        }
    }

    /**
     * @param ActionEvent $event
     * @throws RuntimeException
     * @throws GuzzleException
     */
    public function afterExecute(Event $event) {
       if ($this->agent->isReady()) {
           $sender = $event->sender;
           Yii::info('Worker stopped!');
           if ($sender instanceof WorkerInterface) {
               $result = $sender->getResult();
               $this->agent->stopTransaction($result);
           }
       }
    }
}